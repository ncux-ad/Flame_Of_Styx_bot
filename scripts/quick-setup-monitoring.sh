#!/bin/bash
# –ë—ã—Å—Ç—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
print_header() {
    echo -e "${BLUE}üöÄ Quick Monitoring Setup for AntiSpam Bot${NC}"
    echo -e "${BLUE}==========================================${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${CYAN}‚ÑπÔ∏è $1${NC}"
}

print_step() {
    echo -e "${PURPLE}üîß $1${NC}"
}

print_header

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
if [[ "$USER" == "root" ]]; then
    print_error "–ù–µ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ—Ç root! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
if ! command -v docker &> /dev/null; then
    print_error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker —Å–Ω–∞—á–∞–ª–∞:"
    echo "   curl -fsSL https://get.docker.com -o get-docker.sh"
    echo "   sudo sh get-docker.sh"
    echo "   sudo usermod -aG docker $USER"
    echo "   newgrp docker"
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    print_error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose —Å–Ω–∞—á–∞–ª–∞."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [[ ! -f "bot.py" ]]; then
    print_error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞!"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ Docker
if ! docker ps &> /dev/null; then
    print_error "–ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ Docker. –î–æ–±–∞–≤—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker:"
    echo "   sudo usermod -aG docker $USER"
    echo "   newgrp docker"
    exit 1
fi

print_success "–ü—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã"

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞
print_step "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞..."
if systemctl is-active --quiet antispam-bot; then
    sudo systemctl stop antispam-bot
    print_success "–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    print_info "–ë–æ—Ç –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω"
fi

# –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥
print_step "–û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥..."
git pull origin master
print_success "–ö–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥..."
chmod +x scripts/setup-monitoring.sh
./scripts/setup-monitoring.sh

# –°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å
print_step "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫..."
sudo tee /etc/systemd/system/monitoring.service > /dev/null <<EOF
[Unit]
Description=Monitoring Services (Netdata + Uptime Kuma)
Requires=docker.service
After=docker.service

[Service]
Type=oneshot
RemainAfterExit=yes
WorkingDirectory=$(pwd)/monitoring
ExecStart=/usr/bin/docker-compose up -d
ExecStop=/usr/bin/docker-compose down
TimeoutStartSec=0

[Install]
WantedBy=multi-user.target
EOF

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º systemd
sudo systemctl daemon-reload
sudo systemctl enable monitoring.service
sudo systemctl start monitoring.service

print_success "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω"

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
print_step "–ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞..."
sudo systemctl start antispam-bot

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
sleep 3

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
print_step "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å..."
echo ""
echo -e "${BLUE}=== –°–¢–ê–¢–£–° –°–ï–†–í–ò–°–û–í ===${NC}"
sudo systemctl status antispam-bot --no-pager -l
echo ""
sudo systemctl status monitoring --no-pager -l
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç—ã
echo -e "${BLUE}=== –ü–†–û–í–ï–†–ö–ê –ü–û–†–¢–û–í ===${NC}"
SERVER_IP=$(hostname -I | awk '{print $1}')

if netstat -tlnp 2>/dev/null | grep -q ":19999"; then
    print_success "Netdata: http://${SERVER_IP}:19999"
else
    print_error "Netdata –Ω–µ –∑–∞–ø—É—â–µ–Ω"
fi

if netstat -tlnp 2>/dev/null | grep -q ":3001"; then
    print_success "Uptime Kuma: http://${SERVER_IP}:3001"
else
    print_error "Uptime Kuma –Ω–µ –∑–∞–ø—É—â–µ–Ω"
fi

echo ""
echo -e "${GREEN}üéâ –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!${NC}"
echo ""
echo -e "${CYAN}üìä –î–æ—Å—Ç—É–ø –∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥—É:${NC}"
echo -e "  ‚Ä¢ ${GREEN}Netdata${NC}: http://${SERVER_IP}:19999"
echo -e "  ‚Ä¢ ${GREEN}Uptime Kuma${NC}: http://${SERVER_IP}:3001"
echo ""
echo -e "${CYAN}üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:${NC}"
echo -e "  ‚Ä¢ ${YELLOW}–°—Ç–∞—Ç—É—Å${NC}: sudo systemctl status monitoring"
echo -e "  ‚Ä¢ ${YELLOW}–õ–æ–≥–∏${NC}: cd monitoring && docker-compose logs -f"
echo -e "  ‚Ä¢ ${YELLOW}–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å${NC}: sudo systemctl stop monitoring"
echo -e "  ‚Ä¢ ${YELLOW}–ó–∞–ø—É—Å—Ç–∏—Ç—å${NC}: sudo systemctl start monitoring"
echo ""
echo -e "${CYAN}üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:${NC}"
echo -e "  1. ${PURPLE}–û—Ç–∫—Ä–æ–π—Ç–µ Netdata${NC} –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–ª–µ—Ä—Ç—ã"
echo -e "  2. ${PURPLE}–û—Ç–∫—Ä–æ–π—Ç–µ Uptime Kuma${NC} –∏ –¥–æ–±–∞–≤—å—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±–æ—Ç–∞"
echo -e "  3. ${PURPLE}–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è${NC}"
echo ""
echo -e "${YELLOW}üí° –î–ª—è SSH —Ç—É–Ω–Ω–µ–ª—è (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è):${NC}"
echo -e "  ssh -L 19999:localhost:19999 -L 3001:localhost:3001 ${USER}@${SERVER_IP}"
echo -e "  –ó–∞—Ç–µ–º –æ—Ç–∫—Ä–æ–π—Ç–µ http://localhost:19999 –∏ http://localhost:3001"
echo ""
