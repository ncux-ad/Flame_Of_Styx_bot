#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

print_header() {
    echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ AntiSpam Bot${NC}"
    echo -e "${BLUE}====================================${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${CYAN}‚ÑπÔ∏è $1${NC}"
}

print_header

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
echo -e "${PURPLE}üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:${NC}"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–æ—Ç–∞
if systemctl is-active --quiet antispam-bot; then
    print_success "AntiSpam Bot: –ó–∞–ø—É—â–µ–Ω"
else
    print_error "AntiSpam Bot: –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
if systemctl is-active --quiet monitoring; then
    print_success "Monitoring: –ó–∞–ø—É—â–µ–Ω"
else
    print_error "Monitoring: –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
if systemctl is-active --quiet docker; then
    print_success "Docker: –ó–∞–ø—É—â–µ–Ω"
else
    print_error "Docker: –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç—ã
echo -e "${PURPLE}üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤:${NC}"
echo ""

SERVER_IP=$(hostname -I | awk '{print $1}')

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Netdata
if netstat -tlnp 2>/dev/null | grep -q ":19999"; then
    print_success "Netdata: http://${SERVER_IP}:19999"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
    if curl -s http://localhost:19999 > /dev/null 2>&1; then
        print_success "Netdata: –î–æ—Å—Ç—É–ø–µ–Ω"
    else
        print_warning "Netdata: –ü–æ—Ä—Ç –æ—Ç–∫—Ä—ã—Ç, –Ω–æ —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
else
    print_error "Netdata: –ù–µ –∑–∞–ø—É—â–µ–Ω (–ø–æ—Ä—Ç 19999)"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Uptime Kuma
if netstat -tlnp 2>/dev/null | grep -q ":3001"; then
    print_success "Uptime Kuma: http://${SERVER_IP}:3001"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
    if curl -s http://localhost:3001 > /dev/null 2>&1; then
        print_success "Uptime Kuma: –î–æ—Å—Ç—É–ø–µ–Ω"
    else
        print_warning "Uptime Kuma: –ü–æ—Ä—Ç –æ—Ç–∫—Ä—ã—Ç, –Ω–æ —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
else
    print_error "Uptime Kuma: –ù–µ –∑–∞–ø—É—â–µ–Ω (–ø–æ—Ä—Ç 3001)"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo -e "${PURPLE}üê≥ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:${NC}"
echo ""

if command -v docker &> /dev/null; then
    cd monitoring 2>/dev/null || {
        print_error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è monitoring –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        exit 1
    }
    
    if docker-compose ps | grep -q "Up"; then
        print_success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–∞–ø—É—â–µ–Ω—ã:"
        docker-compose ps
    else
        print_error "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã"
        docker-compose ps
    fi
    
    cd ..
else
    print_error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
echo -e "${PURPLE}üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:${NC}"
echo ""

# –õ–æ–≥–∏ –±–æ—Ç–∞
if systemctl is-active --quiet antispam-bot; then
    print_info "–õ–æ–≥–∏ AntiSpam Bot (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç—Ä–æ–∫):"
    sudo journalctl -u antispam-bot -n 5 --no-pager
    echo ""
fi

# –õ–æ–≥–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
if systemctl is-active --quiet monitoring; then
    print_info "–õ–æ–≥–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç—Ä–æ–∫):"
    sudo journalctl -u monitoring -n 5 --no-pager
    echo ""
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
echo -e "${PURPLE}üíª –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:${NC}"
echo ""

# CPU
CPU_USAGE=$(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | cut -d'%' -f1)
if (( $(echo "$CPU_USAGE > 80" | bc -l) )); then
    print_warning "CPU: ${CPU_USAGE}% (–≤—ã—Å–æ–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞)"
else
    print_success "CPU: ${CPU_USAGE}%"
fi

# Memory
MEMORY_USAGE=$(free | grep Mem | awk '{printf "%.1f", $3/$2 * 100.0}')
if (( $(echo "$MEMORY_USAGE > 85" | bc -l) )); then
    print_warning "Memory: ${MEMORY_USAGE}% (–≤—ã—Å–æ–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ)"
else
    print_success "Memory: ${MEMORY_USAGE}%"
fi

# Disk
DISK_USAGE=$(df / | tail -1 | awk '{print $5}' | cut -d'%' -f1)
if (( DISK_USAGE > 90 )); then
    print_warning "Disk: ${DISK_USAGE}% (–º–∞–ª–æ –º–µ—Å—Ç–∞)"
else
    print_success "Disk: ${DISK_USAGE}%"
fi

echo ""

# –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
echo -e "${PURPLE}üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:${NC}"
echo ""

if ! systemctl is-active --quiet antispam-bot; then
    print_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: sudo systemctl start antispam-bot"
fi

if ! systemctl is-active --quiet monitoring; then
    print_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: sudo systemctl start monitoring"
fi

if ! netstat -tlnp 2>/dev/null | grep -q ":19999"; then
    print_info "Netdata –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ: cd monitoring && docker-compose logs netdata"
fi

if ! netstat -tlnp 2>/dev/null | grep -q ":3001"; then
    print_info "Uptime Kuma –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ: cd monitoring && docker-compose logs uptime-kuma"
fi

echo ""
echo -e "${CYAN}üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
echo -e "  ‚Ä¢ ${YELLOW}–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥${NC}: sudo systemctl restart monitoring"
echo -e "  ‚Ä¢ ${YELLOW}–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤${NC}: cd monitoring && docker-compose logs -f"
echo -e "  ‚Ä¢ ${YELLOW}–°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤${NC}: sudo systemctl status antispam-bot monitoring"
echo -e "  ‚Ä¢ ${YELLOW}SSH —Ç—É–Ω–Ω–µ–ª—å${NC}: ssh -L 19999:localhost:19999 -L 3001:localhost:3001 ${USER}@${SERVER_IP}"
echo ""
