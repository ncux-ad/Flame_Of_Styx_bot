# –ë—ã—Å—Ç—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (PowerShell)

param(
    [switch]$Help
)

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
function Write-Header {
    Write-Host "üöÄ Quick Monitoring Setup for AntiSpam Bot" -ForegroundColor Blue
    Write-Host "==========================================" -ForegroundColor Blue
}

function Write-Success {
    param([string]$Message)
    Write-Host "‚úÖ $Message" -ForegroundColor Green
}

function Write-Warning {
    param([string]$Message)
    Write-Host "‚ö†Ô∏è $Message" -ForegroundColor Yellow
}

function Write-Error {
    param([string]$Message)
    Write-Host "‚ùå $Message" -ForegroundColor Red
}

function Write-Info {
    param([string]$Message)
    Write-Host "‚ÑπÔ∏è $Message" -ForegroundColor Cyan
}

function Write-Step {
    param([string]$Message)
    Write-Host "üîß $Message" -ForegroundColor Magenta
}

if ($Help) {
    Write-Host "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .\quick-setup-monitoring.ps1"
    Write-Host ""
    Write-Host "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ (Netdata + Uptime Kuma) –¥–ª—è AntiSpam Bot"
    Write-Host ""
    Write-Host "–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:"
    Write-Host "  - Docker –∏ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    Write-Host "  - PowerShell 5.1 –∏–ª–∏ –≤—ã—à–µ"
    Write-Host "  - –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è systemd"
    Write-Host ""
    exit 0
}

Write-Header

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
if ($env:USER -eq "root") {
    Write-Error "–ù–µ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ—Ç root! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
try {
    $dockerVersion = docker --version 2>$null
    if (-not $dockerVersion) {
        throw "Docker –Ω–µ –Ω–∞–π–¥–µ–Ω"
    }
    Write-Success "Docker –Ω–∞–π–¥–µ–Ω: $dockerVersion"
} catch {
    Write-Error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker —Å–Ω–∞—á–∞–ª–∞:"
    Write-Host "   curl -fsSL https://get.docker.com -o get-docker.sh"
    Write-Host "   sudo sh get-docker.sh"
    Write-Host "   sudo usermod -aG docker $env:USER"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker Compose
try {
    $composeVersion = docker-compose --version 2>$null
    if (-not $composeVersion) {
        throw "Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω"
    }
    Write-Success "Docker Compose –Ω–∞–π–¥–µ–Ω: $composeVersion"
} catch {
    Write-Error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose —Å–Ω–∞—á–∞–ª–∞."
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if (-not (Test-Path "bot.py")) {
    Write-Error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞!"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ Docker
try {
    docker ps | Out-Null
    Write-Success "–ü—Ä–∞–≤–∞ –Ω–∞ Docker –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"
} catch {
    Write-Error "–ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ Docker. –î–æ–±–∞–≤—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker:"
    Write-Host "   sudo usermod -aG docker $env:USER"
    Write-Host "   newgrp docker"
    exit 1
}

Write-Success "–ü—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã"

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞
Write-Step "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞..."
try {
    $botStatus = systemctl is-active antispam-bot 2>$null
    if ($botStatus -eq "active") {
        sudo systemctl stop antispam-bot
        Write-Success "–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    } else {
        Write-Info "–ë–æ—Ç –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω"
    }
} catch {
    Write-Info "–ë–æ—Ç –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω"
}

# –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥
Write-Step "–û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥..."
try {
    git pull origin master
    Write-Success "–ö–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω"
} catch {
    Write-Error "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–¥"
    exit 1
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
Write-Step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥..."
if (Test-Path "scripts/setup-monitoring.ps1") {
    & ".\scripts\setup-monitoring.ps1"
} else {
    Write-Error "–°–∫—Ä–∏–ø—Ç setup-monitoring.ps1 –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
}

# –°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å
Write-Step "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫..."
$serviceContent = @"
[Unit]
Description=Monitoring Services (Netdata + Uptime Kuma)
Requires=docker.service
After=docker.service

[Service]
Type=oneshot
RemainAfterExit=yes
WorkingDirectory=$(Get-Location)/monitoring
ExecStart=/usr/bin/docker-compose up -d
ExecStop=/usr/bin/docker-compose down
TimeoutStartSec=0

[Install]
WantedBy=multi-user.target
"@

try {
    $serviceContent | sudo tee /etc/systemd/system/monitoring.service > $null
    sudo systemctl daemon-reload
    sudo systemctl enable monitoring.service
    sudo systemctl start monitoring.service
    Write-Success "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω"
} catch {
    Write-Error "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å systemd —Å–µ—Ä–≤–∏—Å"
    exit 1
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
Write-Step "–ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞..."
try {
    sudo systemctl start antispam-bot
    Start-Sleep -Seconds 3
    Write-Success "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω"
} catch {
    Write-Error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
Write-Step "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å..."
Write-Host ""
Write-Host "=== –°–¢–ê–¢–£–° –°–ï–†–í–ò–°–û–í ===" -ForegroundColor Blue

try {
    sudo systemctl status antispam-bot --no-pager -l
} catch {
    Write-Error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞"
}

Write-Host ""
try {
    sudo systemctl status monitoring --no-pager -l
} catch {
    Write-Error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
}

Write-Host ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç—ã
Write-Host "=== –ü–†–û–í–ï–†–ö–ê –ü–û–†–¢–û–í ===" -ForegroundColor Blue
$serverIP = (Get-NetIPAddress -AddressFamily IPv4 | Where-Object {$_.IPAddress -ne "127.0.0.1"} | Select-Object -First 1).IPAddress

try {
    $netdataPort = Get-NetTCPConnection -LocalPort 19999 -ErrorAction SilentlyContinue
    if ($netdataPort) {
        Write-Success "Netdata: http://${serverIP}:19999"
    } else {
        Write-Error "Netdata –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    }
} catch {
    Write-Error "Netdata –Ω–µ –∑–∞–ø—É—â–µ–Ω"
}

try {
    $uptimePort = Get-NetTCPConnection -LocalPort 3001 -ErrorAction SilentlyContinue
    if ($uptimePort) {
        Write-Success "Uptime Kuma: http://${serverIP}:3001"
    } else {
        Write-Error "Uptime Kuma –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    }
} catch {
    Write-Error "Uptime Kuma –Ω–µ –∑–∞–ø—É—â–µ–Ω"
}

Write-Host ""
Write-Host "üéâ –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!" -ForegroundColor Green
Write-Host ""
Write-Host "üìä –î–æ—Å—Ç—É–ø –∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥—É:" -ForegroundColor Cyan
Write-Host "  ‚Ä¢ Netdata: http://${serverIP}:19999" -ForegroundColor Green
Write-Host "  ‚Ä¢ Uptime Kuma: http://${serverIP}:3001" -ForegroundColor Green
Write-Host ""
Write-Host "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:" -ForegroundColor Cyan
Write-Host "  ‚Ä¢ –°—Ç–∞—Ç—É—Å: sudo systemctl status monitoring" -ForegroundColor Yellow
Write-Host "  ‚Ä¢ –õ–æ–≥–∏: cd monitoring && docker-compose logs -f" -ForegroundColor Yellow
Write-Host "  ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: sudo systemctl stop monitoring" -ForegroundColor Yellow
Write-Host "  ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç—å: sudo systemctl start monitoring" -ForegroundColor Yellow
Write-Host ""
Write-Host "üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor Cyan
Write-Host "  1. –û—Ç–∫—Ä–æ–π—Ç–µ Netdata –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–ª–µ—Ä—Ç—ã" -ForegroundColor Magenta
Write-Host "  2. –û—Ç–∫—Ä–æ–π—Ç–µ Uptime Kuma –∏ –¥–æ–±–∞–≤—å—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±–æ—Ç–∞" -ForegroundColor Magenta
Write-Host "  3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è" -ForegroundColor Magenta
Write-Host ""
Write-Host "üí° –î–ª—è SSH —Ç—É–Ω–Ω–µ–ª—è (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è):" -ForegroundColor Yellow
Write-Host "  ssh -L 19999:localhost:19999 -L 3001:localhost:3001 $env:USER@${serverIP}" -ForegroundColor Yellow
Write-Host "  –ó–∞—Ç–µ–º –æ—Ç–∫—Ä–æ–π—Ç–µ http://localhost:19999 –∏ http://localhost:3001" -ForegroundColor Yellow
Write-Host ""
