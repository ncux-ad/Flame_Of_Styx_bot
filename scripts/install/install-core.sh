#!/bin/bash
# =============================================================================
# –û–°–ù–û–í–ù–ê–Ø –õ–û–ì–ò–ö–ê –£–°–¢–ê–ù–û–í–ö–ò
# =============================================================================

# –§—É–Ω–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
finalize_installation() {
    info "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
    
    # –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª
    create_local_env
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞
    set_permissions
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å
    if [ "$INSTALLATION_TYPE" = "systemd" ]; then
        systemctl enable "${APP_NAME}.service"
        systemctl start "${APP_NAME}.service"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–∞
        health_check
    fi
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    send_test_notification
    
    success "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞
health_check() {
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞..."
    
    local max_attempts=30
    local attempt=0
    
    while [ $attempt -lt $max_attempts ]; do
        if systemctl is-active --quiet "${APP_NAME}.service"; then
            success "–°–µ—Ä–≤–∏—Å ${APP_NAME} –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
            return 0
        fi
        
        attempt=$((attempt + 1))
        log "–ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts: –æ–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞..."
        sleep 2
    done
    
    error "–°–µ—Ä–≤–∏—Å ${APP_NAME} –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∑–∞ $max_attempts –ø–æ–ø—ã—Ç–æ–∫"
    return 1
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
send_test_notification() {
    if [ -n "${NOTIFICATION_WEBHOOK:-}" ] && [[ "$NOTIFICATION_WEBHOOK" =~ https://api.telegram.org ]]; then
        log "–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram..."
        
        local message="ü§ñ <b>AntiSpam Bot —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!</b>%0A%0A"
        message+="üìã <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å—Ç–∞–Ω–æ–≤–∫–µ:</b>%0A"
        message+="‚Ä¢ –ü—Ä–æ—Ñ–∏–ª—å: <code>$PROFILE</code>%0A"
        message+="‚Ä¢ –¢–∏–ø: <code>$INSTALLATION_TYPE</code>%0A"
        message+="‚Ä¢ –î–æ–º–µ–Ω: <code>$DOMAIN</code>%0A"
        message+="‚Ä¢ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: <code>$BASE_DIR</code>%0A"
        message+="‚Ä¢ SSH –ø–æ—Ä—Ç: <code>$SSH_PORT</code>%0A%0A"
        message+="‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
        
        local url="${NOTIFICATION_WEBHOOK}&text=${message}"
        
        if curl -s --max-time 10 "$url" >/dev/null 2>&1; then
            success "–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram"
        else
            warning "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram"
        fi
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
show_final_info() {
    echo ""
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë                    –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê                       ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo ""
    
    success "üéâ AntiSpam Bot —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    echo ""
    
    echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å—Ç–∞–Ω–æ–≤–∫–µ:"
    echo "  ‚Ä¢ –ü—Ä–æ—Ñ–∏–ª—å: $PROFILE"
    echo "  ‚Ä¢ –¢–∏–ø: $INSTALLATION_TYPE"
    echo "  ‚Ä¢ –î–æ–º–µ–Ω: $DOMAIN"
    echo "  ‚Ä¢ Email: $EMAIL"
    echo "  ‚Ä¢ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $BASE_DIR"
    echo "  ‚Ä¢ SSH –ø–æ—Ä—Ç: $SSH_PORT"
    echo ""
    
    if [ "$INSTALLATION_TYPE" = "systemd" ]; then
        echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–º:"
        echo "  ‚Ä¢ –°—Ç–∞—Ç—É—Å: systemctl status ${APP_NAME}.service"
        echo "  ‚Ä¢ –ó–∞–ø—É—Å–∫: systemctl start ${APP_NAME}.service"
        echo "  ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞: systemctl stop ${APP_NAME}.service"
        echo "  ‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: systemctl restart ${APP_NAME}.service"
        echo "  ‚Ä¢ –õ–æ–≥–∏: journalctl -u ${APP_NAME}.service -f"
        echo ""
    fi
    
    echo "üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:"
    if [[ "$DOMAIN" != "localhost" && "$DOMAIN" != "127.0.0.1" ]]; then
        echo "  ‚Ä¢ HTTP: http://$DOMAIN"
        echo "  ‚Ä¢ HTTPS: https://$DOMAIN"
    else
        echo "  ‚Ä¢ HTTP: http://localhost"
    fi
    echo ""
    
    echo "üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:"
    echo "  ‚Ä¢ UFW: $(systemctl is-active ufw 2>/dev/null || echo '–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω')"
    echo "  ‚Ä¢ Fail2ban: $(systemctl is-active fail2ban 2>/dev/null || echo '–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω')"
    echo ""
    
    if [ "$INSTALLATION_TYPE" = "systemd" ]; then
        echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
        echo "  ‚Ä¢ ${APP_NAME}: $(systemctl is-active ${APP_NAME}.service 2>/dev/null || echo '–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω')"
        echo "  ‚Ä¢ Nginx: $(systemctl is-active nginx 2>/dev/null || echo '–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω')"
        echo ""
    fi
    
    echo "üìÅ –§–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"
    echo "  ‚Ä¢ .env: $BASE_DIR/.env"
    echo "  ‚Ä¢ –õ–æ–≥–∏: $LOG_DIR/"
    echo "  ‚Ä¢ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: $CONFIG_DIR/"
    echo ""
    
    if [ -n "$NATIVE_CHANNEL_IDS" ] && [ "$NATIVE_CHANNEL_IDS" != "-10000000000" ]; then
        echo "üì∫ –ù–∞—Ç–∏–≤–Ω—ã–µ –∫–∞–Ω–∞–ª—ã:"
        echo "  ‚Ä¢ $NATIVE_CHANNEL_IDS"
        echo ""
    fi
    
    echo "üîß –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "  1. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª—ã –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    echo "  2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ (—É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π, –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)"
    echo "  3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –∫–æ–º–∞–Ω–¥–æ–π /status –≤ –ª–∏—á–∫–µ —Å –±–æ—Ç–æ–º"
    echo "  4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–∞–Ω–∞–ª—ã –∫–æ–º–∞–Ω–¥–æ–π /channels"
    echo ""
    
    echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
    echo "  ‚Ä¢ README.md - –æ—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
    echo "  ‚Ä¢ docs/ADMIN_GUIDE.md - —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    echo "  ‚Ä¢ docs/TROUBLESHOOTING.md - —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–ø–æ–ª–∞–¥–æ–∫"
    echo ""
    
    echo "üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞:"
    echo "  ‚Ä¢ GitHub: https://github.com/ncux-ad/Flame_Of_Styx_bot"
    echo "  ‚Ä¢ –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: [@ncux-ad](https://github.com/ncux-ad)"
    echo ""
    
    success "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ! üöÄ"
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
install_application() {
    info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    if [ "$INSTALLATION_TYPE" = "systemd" ]; then
        install_systemd_version
    elif [ "$INSTALLATION_TYPE" = "docker" ]; then
        install_docker_version
    else
        error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —É—Å—Ç–∞–Ω–æ–≤–∫–∏: $INSTALLATION_TYPE"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker –≤–µ—Ä—Å–∏–∏
install_docker_version() {
    info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ Docker..."
    
    # –°–æ–∑–¥–∞–µ–º docker-compose.yml –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [ ! -f "docker-compose.yml" ]; then
        cat > docker-compose.yml << EOF
version: '3.8'

services:
  antispam-bot:
    build: .
    container_name: antispam-bot
    restart: unless-stopped
    environment:
      - BOT_TOKEN=\${BOT_TOKEN}
      - ADMIN_IDS=\${ADMIN_IDS}
      - NATIVE_CHANNEL_IDS=\${NATIVE_CHANNEL_IDS}
      - DB_PATH=\${DB_PATH}
      - LOG_LEVEL=\${LOG_LEVEL}
      - RATE_LIMIT=\${RATE_LIMIT}
      - RATE_INTERVAL=\${RATE_INTERVAL}
      - DOMAIN=\${DOMAIN}
      - EMAIL=\${EMAIL}
      - REDIS_PASSWORD=\${REDIS_PASSWORD}
      - NOTIFICATION_WEBHOOK=\${NOTIFICATION_WEBHOOK}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - antispam-network

networks:
  antispam-network:
    driver: bridge
EOF
    fi
    
    # –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –¥–ª—è Docker
    create_local_env
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    docker-compose up -d --build
    
    success "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ Docker –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã
setup_system() {
    info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    install_system_dependencies
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker –µ—Å–ª–∏ –Ω—É–∂–µ–Ω
    install_docker
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ñ–∞–π—Ä–≤–æ–ª
    setup_firewall
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º fail2ban
    setup_fail2ban
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Nginx
    setup_nginx
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Let's Encrypt
    setup_letsencrypt
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–æ—Ç–∞—Ü–∏—é –ª–æ–≥–æ–≤
    setup_log_rotation
    
    success "–°–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏
cleanup() {
    info "–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    cleanup_temp_files
    success "–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
handle_error() {
    local exit_code=$?
    local line_number=$1
    
    error "–û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ $line_number (–∫–æ–¥ –≤—ã—Ö–æ–¥–∞: $exit_code)"
    error "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    echo ""
    echo "üîç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏:"
    echo "  ‚Ä¢ –ö–æ–¥ –æ—à–∏–±–∫–∏: $exit_code"
    echo "  ‚Ä¢ –°—Ç—Ä–æ–∫–∞: $line_number"
    echo "  ‚Ä¢ –ü—Ä–æ—Ñ–∏–ª—å: $PROFILE"
    echo "  ‚Ä¢ –¢–∏–ø: $INSTALLATION_TYPE"
    echo "  ‚Ä¢ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $BASE_DIR"
    echo ""
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏
    if [ "$INSTALLATION_TYPE" = "systemd" ]; then
        echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞:"
        journalctl -u "${APP_NAME}.service" --no-pager -n 10 || true
    fi
    
    exit $exit_code
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
trap 'handle_error $LINENO' ERR

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –≤–µ—Ä—Å–∏–∏
show_version() {
    echo "$SCRIPT_NAME v$SCRIPT_VERSION"
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    cat << EOF
–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
    $0 [–û–ü–¶–ò–ò]

–û–ü–¶–ò–ò:
    --profile PROFILE         –ü—Ä–æ—Ñ–∏–ª—å —É—Å—Ç–∞–Ω–æ–≤–∫–∏ (user|prod)
    --type TYPE              –¢–∏–ø —É—Å—Ç–∞–Ω–æ–≤–∫–∏ (docker|systemd)
    --ssh-port PORT          SSH –ø–æ—Ä—Ç (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 22)
    --domain DOMAIN          –î–æ–º–µ–Ω –¥–ª—è Let's Encrypt
    --email EMAIL            Email –¥–ª—è Let's Encrypt
    --bot-token TOKEN        –¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞
    --admin-ids IDS          ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)
    --channel-links LINKS    –°—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)
    --non-interactive        –ù–µ–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
    --dry-run                –†–µ–∂–∏–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    --skip-docker            –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É Docker (–¥–ª—è —Å–ª–∞–±—ã—Ö VPS)
    --base-dir DIR           –£–∫–∞–∑–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    --help                   –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
    --version                –ü–æ–∫–∞–∑–∞—Ç—å –≤–µ—Ä—Å–∏—é

–ü–†–ò–ú–ï–†–´:
    sudo bash $0 --profile=user --type=systemd --domain=example.com --email=admin@example.com
    sudo bash $0 --non-interactive --bot-token=123:ABC --admin-ids=123456789
    sudo bash $0 --skip-docker --type=systemd --domain=example.com --email=admin@example.com
    sudo bash $0 --profile=user --base-dir=/home/user/my-bot --type=systemd
    sudo bash $0 --profile=prod --base-dir=/opt/my-custom-bot --type=systemd
EOF
}
