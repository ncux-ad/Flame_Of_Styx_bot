#!/bin/bash

# Load secure utilities
source "$(dirname "$0")/secure_shell_utils.sh"

# üê≥ –£–º–Ω—ã–π Docker Development Script –¥–ª—è AntiSpam Bot
# –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ—Ç –æ–±—Ä–∞–∑ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ requirements.txt
check_requirements_changed() {
    if [ ! -f .docker-requirements-hash ]; then
        return 0  # –§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å
    fi

    current_hash=$(md5sum requirements.txt | cut -d' ' -f1)
    stored_hash=$(cat .docker-requirements-hash)

    if [ "$current_hash" != "$stored_hash" ]; then
        return 0  # –•–µ—à –∏–∑–º–µ–Ω–∏–ª—Å—è, –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å
    fi

    return 1  # –•–µ—à –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è, –ø–µ—Ä–µ—Å–æ–±–∏—Ä–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ö–µ—à–∞ requirements.txt
update_requirements_hash() {
    md5sum requirements.txt | cut -d' ' -f1 > .docker-requirements-hash
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
check_docker() {
    if ! command -v docker &> /dev/null; then
        error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
        exit 1
    fi

    if ! command -v docker-compose &> /dev/null; then
        error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
check_env() {
    if [ ! -f .env ]; then
        warn ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—é –∏–∑ –ø—Ä–∏–º–µ—Ä–∞..."
        cp env.example .env
        warn "–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏!"
        exit 1
    fi
}

# –£–º–Ω–∞—è —Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞
smart_build() {
    if check_requirements_changed; then
        log "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ requirements.txt, –ø–µ—Ä–µ—Å–æ–±–∏—Ä–∞—é –æ–±—Ä–∞–∑..."
        docker-compose build --no-cache
        update_requirements_hash
        log "–û–±—Ä–∞–∑ –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω –∏ —Ö–µ—à –æ–±–Ω–æ–≤–ª–µ–Ω"
    else
        log "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å, –∏—Å–ø–æ–ª—å–∑—É—é —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ–±—Ä–∞–∑"
    fi
}

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
start_bot() {
    log "–ó–∞–ø—É—Å–∫ AntiSpam Bot –≤ Docker..."
    smart_build
    docker-compose up -d antispam-bot
    log "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '$0 logs' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤"
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞
stop_bot() {
    log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ AntiSpam Bot..."
    docker-compose down
    log "–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
}

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
restart_bot() {
    log "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ AntiSpam Bot..."
    docker-compose restart antispam-bot
    log "–ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
}

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞
force_build() {
    log "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞..."
    docker-compose build --no-cache
    update_requirements_hash
    log "–û–±—Ä–∞–∑ –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω"
}

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤
show_logs() {
    docker-compose logs "$@"
}

# –í—Ö–æ–¥ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
enter_shell() {
    log "–í—Ö–æ–¥ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä AntiSpam Bot..."
    docker-compose exec antispam-bot /bin/bash
}

# –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤
clean_docker() {
    log "–û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤..."
    docker-compose down -v
    docker system prune -f
    rm -f .docker-requirements-hash
    log "–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
show_status() {
    log "–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker-compose ps
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–º–æ—â–∏
show_help() {
    echo "üê≥ –£–º–Ω—ã–π Docker Development Script –¥–ª—è AntiSpam Bot"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∫–æ–º–∞–Ω–¥–∞]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  start     - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ (—É–º–Ω–∞—è —Å–±–æ—Ä–∫–∞)"
    echo "  stop      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
    echo "  restart   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
    echo "  build     - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞"
    echo "  logs      - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –±–æ—Ç–∞"
    echo "  shell     - –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
    echo "  clean     - –û—á–∏—Å—Ç–∏—Ç—å Docker —Ä–µ—Å—É—Ä—Å—ã"
    echo "  status    - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    echo "  help      - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:"
    echo "  - –û–±—Ä–∞–∑ –ø–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ requirements.txt"
    echo "  - –ö–æ–¥ –º–æ–Ω—Ç–∏—Ä—É–µ—Ç—Å—è –∫–∞–∫ volume –¥–ª—è hot reload"
    echo "  - –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–∏ –Ω–µ–∏–∑–º–µ–Ω–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    check_docker
    check_env

    case "${1:-help}" in
        start)
            start_bot
            ;;
        stop)
            stop_bot
            ;;
        restart)
            restart_bot
            ;;
        build)
            force_build
            ;;
        logs)
            shift
            show_logs "$@"
            ;;
        shell)
            enter_shell
            ;;
        clean)
            clean_docker
            ;;
        status)
            show_status
            ;;
        help|--help|-h)
            show_help
            ;;
        *)
            error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
            show_help
            exit 1
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫
main "$@"
