#!/bin/bash
# –ü—Ä–æ—Å—Ç–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —á–µ—Ä–µ–∑ Docker

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

print_header() {
    echo -e "${BLUE}üê≥ Simple Monitoring Setup${NC}"
    echo -e "${BLUE}==========================${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${CYAN}‚ÑπÔ∏è $1${NC}"
}

print_step() {
    echo -e "${PURPLE}üîß $1${NC}"
}

print_header

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
if ! command -v docker &> /dev/null; then
    print_error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker:"
    echo "   curl -fsSL https://get.docker.com -o get-docker.sh"
    echo "   sudo sh get-docker.sh"
    echo "   sudo usermod -aG docker $USER"
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    print_error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose:"
    echo "   sudo curl -L \"https://github.com/docker/compose/releases/latest/download/docker-compose-\$(uname -s)-\$(uname -m)\" -o /usr/local/bin/docker-compose"
    echo "   sudo chmod +x /usr/local/bin/docker-compose"
    exit 1
fi

print_success "Docker –ø—Ä–æ–≤–µ—Ä–µ–Ω"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
print_step "–°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
mkdir -p monitoring

# –°–æ–∑–¥–∞–µ–º Docker Compose —Ñ–∞–π–ª
print_step "–°–æ–∑–¥–∞–µ–º Docker Compose —Ñ–∞–π–ª..."
cat > monitoring/docker-compose.yml << 'EOF'
version: '3.8'

services:
  # Netdata - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ä–≤–µ—Ä–∞
  netdata:
    image: netdata/netdata:latest
    container_name: netdata
    hostname: antispam-bot-monitor
    ports:
      - "19999:19999"
    volumes:
      - netdataconfig:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    restart: unless-stopped

  # Uptime Kuma - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: uptime-kuma
    ports:
      - "3001:3001"
    volumes:
      - uptime-kuma-data:/app/data
    restart: unless-stopped

volumes:
  netdataconfig:
  netdatalib:
  netdatacache:
  uptime-kuma-data:
EOF

print_success "Docker Compose —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"

# –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
print_step "–ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥..."
cd monitoring
docker-compose up -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
print_step "–ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 15

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
print_step "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å..."
if docker-compose ps | grep -q "Up"; then
    print_success "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω"
else
    print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
    print_info "–õ–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker-compose logs
    exit 1
fi

cd ..

# –°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å –¥–ª—è Docker
print_step "–°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å –¥–ª—è Docker..."
sudo tee /etc/systemd/system/monitoring-docker.service > /dev/null <<EOF
[Unit]
Description=Monitoring Services (Docker)
Requires=docker.service
After=docker.service

[Service]
Type=oneshot
RemainAfterExit=yes
WorkingDirectory=$(pwd)/monitoring
ExecStart=/usr/bin/docker-compose up -d
ExecStop=/usr/bin/docker-compose down
TimeoutStartSec=0

[Install]
WantedBy=multi-user.target
EOF

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º systemd
sudo systemctl daemon-reload
sudo systemctl enable monitoring-docker.service

print_success "Docker –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç—ã
print_step "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç—ã..."
SERVER_IP=$(hostname -I | awk '{print $1}')

if netstat -tlnp 2>/dev/null | grep -q ":19999"; then
    print_success "Netdata: http://${SERVER_IP}:19999"
else
    print_error "Netdata –Ω–µ –∑–∞–ø—É—â–µ–Ω"
fi

if netstat -tlnp 2>/dev/null | grep -q ":3001"; then
    print_success "Uptime Kuma: http://${SERVER_IP}:3001"
else
    print_error "Uptime Kuma –Ω–µ –∑–∞–ø—É—â–µ–Ω"
fi

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º firewall
print_step "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º firewall..."
if command -v ufw &> /dev/null; then
    sudo ufw allow 19999/tcp comment "Netdata monitoring" 2>/dev/null || true
    sudo ufw allow 3001/tcp comment "Uptime Kuma monitoring" 2>/dev/null || true
    print_success "UFW firewall –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
elif command -v firewall-cmd &> /dev/null; then
    sudo firewall-cmd --permanent --add-port=19999/tcp 2>/dev/null || true
    sudo firewall-cmd --permanent --add-port=3001/tcp 2>/dev/null || true
    sudo firewall-cmd --reload 2>/dev/null || true
    print_success "Firewalld –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
fi

print_success "üéâ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!"
print_info "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
print_info "  ‚Ä¢ –°—Ç–∞—Ç—É—Å: cd monitoring && docker-compose ps"
print_info "  ‚Ä¢ –õ–æ–≥–∏: cd monitoring && docker-compose logs"
print_info "  ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: cd monitoring && docker-compose down"
print_info "  ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç—å: cd monitoring && docker-compose up -d"
