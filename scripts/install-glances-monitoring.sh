#!/bin/bash
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Glances - –ª–µ–≥–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–ª—è VPS

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

print_header() {
    echo -e "${BLUE}üëÅÔ∏è Glances Monitoring Setup${NC}"
    echo -e "${BLUE}============================${NC}"
    echo -e "${YELLOW}üí° –õ–µ–≥–∫–∏–π Python-–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º${NC}"
    echo ""
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${CYAN}‚ÑπÔ∏è $1${NC}"
}

print_step() {
    echo -e "${PURPLE}üîß $1${NC}"
}

print_header

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
print_step "–ü—Ä–æ–≤–µ—Ä—è–µ–º Python..."
if ! command -v python3 &> /dev/null; then
    print_error "Python3 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Glances –≤ venv
print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Glances –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
pip install glances[web]

# –ù–∞—Ö–æ–¥–∏–º –ø—É—Ç—å –∫ glances –≤ venv
GLANCES_PATH=$(which glances)
if [ -z "$GLANCES_PATH" ]; then
    # –ò—â–µ–º –≤ venv
    GLANCES_PATH="./venv/bin/glances"
    if [ ! -f "$GLANCES_PATH" ]; then
        GLANCES_PATH="/usr/local/bin/glances"
    fi
fi

print_info "Glances —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤: $GLANCES_PATH"

# –û–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç—å –¥–ª—è systemd (–±—É–¥–µ—Ç –≤ /home/glances/venv/bin/glances)
GLANCES_SYSTEMD_PATH="/home/glances/venv/bin/glances"

# –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è Glances
print_step "–°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è glances..."
sudo userdel glances 2>/dev/null || true
sudo useradd -r -s /bin/false -m glances 2>/dev/null || {
    print_warning "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å glances —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
}

# –ö–æ–ø–∏—Ä—É–µ–º venv –¥–ª—è glances
print_step "–ö–æ–ø–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è glances..."
sudo cp -r venv /home/glances/
sudo chown -R glances:glances /home/glances/venv

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å glances —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if ! id glances >/dev/null 2>&1; then
    print_error "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å glances –Ω–µ —Å–æ–∑–¥–∞–Ω!"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Glances
print_step "–°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Glances..."
sudo mkdir -p /etc/glances
# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ñ–∏–≥ –µ—Å–ª–∏ –µ—Å—Ç—å
sudo rm -f /etc/glances/glances.conf
sudo tee /etc/glances/glances.conf > /dev/null <<EOF
[global]
# –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
refresh = 2
time = 10
one_shot = False
percpu = True
disable_plugin = docker,raid,ip,folders,ports,processcount,processlist,processlistfast,quicklook,system,uptime,load,mem,memswap,network,diskio,fs,now,alert,amps,cloud,gpu,containers,chart,psutilversion,smart,wifi

# –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
web_server = True
web_server_port = 8080
web_server_host = 0.0.0.0

# REST API
rest_api = True
rest_api_port = 61208
rest_api_host = 0.0.0.0

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log_file = /var/log/glances.log
log_level = INFO

# –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è VPS
disable_plugin = docker,raid,ip,folders,ports,processcount,processlist,processlistfast,quicklook,system,uptime,load,mem,memswap,network,diskio,fs,now,alert,amps,cloud,gpu,containers,chart,psutilversion,raid,smart,wifi
EOF

# –°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å
print_step "–°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å..."
sudo tee /etc/systemd/system/glances.service > /dev/null <<EOF
[Unit]
Description=Glances - Real-time system monitoring
Documentation=https://github.com/nicolargo/glances
After=network.target

[Service]
Type=simple
User=glances
Group=glances
WorkingDirectory=/home/glances
ExecStart=$GLANCES_SYSTEMD_PATH -w --port 61208 --bind 0.0.0.0
Restart=on-failure
RestartSec=10
Environment=PYTHONUNBUFFERED=1
Environment=PATH=/home/glances/venv/bin:/usr/local/bin:/usr/bin:/bin

# –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è VPS
MemoryLimit=64M
CPUQuota=10%

[Install]
WantedBy=multi-user.target
EOF

# –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π healthcheck endpoint
print_step "–°–æ–∑–¥–∞–µ–º healthcheck endpoint..."
sudo mkdir -p /var/www/html
sudo tee /var/www/html/healthcheck.php > /dev/null <<'EOF'
<?php
header('Content-Type: application/json');
header('Access-Control-Allow-Origin: *');

$status = [
    'status' => 'ok',
    'timestamp' => date('Y-m-d H:i:s'),
    'uptime' => shell_exec('uptime -p'),
    'memory' => shell_exec('free -h | grep Mem'),
    'disk' => shell_exec('df -h / | tail -1'),
    'bot_status' => 'running'
];

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞
$bot_pid = shell_exec('pgrep -f "python.*bot.py"');
if (empty(trim($bot_pid))) {
    $status['bot_status'] = 'stopped';
    $status['status'] = 'warning';
}

echo json_encode($status, JSON_PRETTY_PRINT);
?>
EOF

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞
sudo chown www-data:www-data /var/www/html/healthcheck.php
sudo chmod 644 /var/www/html/healthcheck.php

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º nginx –¥–ª—è healthcheck
print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º nginx –¥–ª—è healthcheck..."
if command -v apt &> /dev/null; then
    sudo apt install -y nginx
elif command -v yum &> /dev/null; then
    sudo yum install -y nginx
elif command -v dnf &> /dev/null; then
    sudo dnf install -y nginx
fi

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º nginx
sudo tee /etc/nginx/sites-available/healthcheck > /dev/null <<EOF
server {
    listen 8081;
    server_name _;
    
    root /var/www/html;
    index healthcheck.php;
    
    location / {
        try_files \$uri \$uri/ =404;
    }
    
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
    }
}
EOF

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å–∞–π—Ç
sudo ln -sf /etc/nginx/sites-available/healthcheck /etc/nginx/sites-enabled/
sudo rm -f /etc/nginx/sites-enabled/default

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º firewall
print_step "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º firewall..."
if command -v ufw &> /dev/null; then
    sudo ufw allow 8080/tcp comment "Glances web interface"
    sudo ufw allow 61208/tcp comment "Glances REST API"
    sudo ufw allow 8081/tcp comment "Healthcheck endpoint"
    print_success "UFW firewall –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
elif command -v firewall-cmd &> /dev/null; then
    sudo firewall-cmd --permanent --add-port=8080/tcp
    sudo firewall-cmd --permanent --add-port=61208/tcp
    sudo firewall-cmd --permanent --add-port=8081/tcp
    sudo firewall-cmd --reload
    print_success "Firewalld –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
print_step "–ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..."
sudo systemctl daemon-reload
sudo systemctl enable glances
sudo systemctl start glances

sudo systemctl enable nginx
sudo systemctl restart nginx

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
sleep 5

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
if systemctl is-active --quiet glances; then
    print_success "Glances –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
else
    print_error "Glances –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
    print_info "–õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞:"
    sudo journalctl -u glances -n 10 --no-pager
    exit 1
fi

if systemctl is-active --quiet nginx; then
    print_success "Nginx –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
else
    print_error "Nginx –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç—ã
SERVER_IP=$(hostname -I | awk '{print $1}')

if netstat -tlnp 2>/dev/null | grep -q ":8080"; then
    print_success "Glances –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://${SERVER_IP}:8080"
else
    print_error "–ü–æ—Ä—Ç 8080 –Ω–µ –æ—Ç–∫—Ä—ã—Ç"
fi

if netstat -tlnp 2>/dev/null | grep -q ":61208"; then
    print_success "Glances REST API: http://${SERVER_IP}:61208"
else
    print_error "–ü–æ—Ä—Ç 61208 –Ω–µ –æ—Ç–∫—Ä—ã—Ç"
fi

if netstat -tlnp 2>/dev/null | grep -q ":8081"; then
    print_success "Healthcheck: http://${SERVER_IP}:8081/healthcheck.php"
else
    print_error "–ü–æ—Ä—Ç 8081 –Ω–µ –æ—Ç–∫—Ä—ã—Ç"
fi

print_success "üéâ Glances –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!"
print_info "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
print_info "  ‚Ä¢ –°—Ç–∞—Ç—É—Å: sudo systemctl status glances"
print_info "  ‚Ä¢ –õ–æ–≥–∏: sudo journalctl -u glances -f"
print_info "  ‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: sudo systemctl restart glances"
print_info "  ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞: sudo systemctl stop glances"
print_info ""
print_info "üí° Glances - —Å–∞–º—ã–π –ª–µ–≥–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–ª—è VPS!"
print_info "üí° –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å + REST API + Telegram-–∞–ª–µ—Ä—Ç—ã!"
