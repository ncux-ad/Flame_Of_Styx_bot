name: Code Quality Checks

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]
  workflow_dispatch:

jobs:
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.11, 3.12]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run code quality checks
      env:
        BOT_TOKEN: "123456789:test_token_123456789"
        ADMIN_IDS: "123456789"
        DB_PATH: "test.db"
        REDIS_ENABLED: "false"
        REDIS_URL: "redis://localhost:6379/0"
      run: |
        echo "Running Black (code formatting)..."
        black --check --diff app/ scripts/ bot.py || echo "Black check failed"
        
        echo "Running Ruff (linting)..."
        ruff check app/ scripts/ bot.py --output-format=github || echo "Ruff check failed"
        
        echo "Running MyPy (type checking)..."
        mypy app/ bot.py --ignore-missing-imports || echo "MyPy check failed"
        
        echo "Running isort (import sorting)..."
        isort --check-only --diff app/ scripts/ bot.py || echo "isort check failed"
      continue-on-error: true

  security:
    name: Security Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run Bandit (security linting)
      run: |
        bandit -r app/ -f json -o bandit-report.json -ll || true
        bandit -r app/ -ll
      continue-on-error: true
    
    - name: Run Safety (vulnerability check)
      run: |
        safety check --ignore 77745,77744,76752,77680,78162 --json > safety-report.json || true
        safety check --ignore 77745,77744,76752,77680,78162
      continue-on-error: true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json

  dependencies:
    name: Dependencies Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Check for outdated packages
      run: |
        pip list --outdated
      continue-on-error: true
    
    - name: Validate requirements.txt
      run: |
        pip check
      continue-on-error: true

  build:
    name: Build Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Build package
      run: |
        python -m build
      continue-on-error: true
    
    - name: Check package
      run: |
        python -m twine check dist/*
      continue-on-error: true