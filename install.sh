#!/bin/bash
# –ì–ª–∞–≤–Ω—ã–π —É—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è AntiSpam Bot
# Main installation script for AntiSpam Bot

set -euo pipefail

# Load secure utilities
source "$(dirname "$0")/scripts/secure_shell_utils.sh"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date '+%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

info() {
    echo -e "${CYAN}[INFO]${NC} $1"
}

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
clear
echo -e "${PURPLE}"
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë                    ANTI-SPAM BOT INSTALLER                   ‚ïë"
echo "‚ïë                                                              ‚ïë"
echo "‚ïë  ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Telegram –±–æ—Ç–∞                  ‚ïë"
echo "‚ïë  üîê –° –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Let's Encrypt SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤             ‚ïë"
echo "‚ïë  üê≥ Docker –∏ systemd –≤–∞—Ä–∏–∞–Ω—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏                     ‚ïë"
echo "‚ïë  üõ°Ô∏è –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏                        ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo -e "${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
if [ "$EUID" -ne 0 ]; then
    error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω —Å –ø—Ä–∞–≤–∞–º–∏ root (sudo)"
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: sudo bash install.sh"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
choose_installation_type() {
    echo ""
    info "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É—Å—Ç–∞–Ω–æ–≤–∫–∏:"
    echo ""
    echo "1) üê≥ Docker (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)"
    echo "   - –ü—Ä–æ—Å—Ç–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"
    echo "   - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ"
    echo "   - –ò–∑–æ–ª—è—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo ""
    echo "2) ‚öôÔ∏è  systemd (–ø—Ä—è–º–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞)"
    echo "   - –ü—Ä—è–º–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ —Å–∏—Å—Ç–µ–º—É"
    echo "   - –ë–æ–ª—å—à–µ –∫–æ–Ω—Ç—Ä–æ–ª—è"
    echo "   - –ú–µ–Ω—å—à–µ —Ä–µ—Å—É—Ä—Å–æ–≤"
    echo ""
    echo "3) üîß –¢–æ–ª—å–∫–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    echo "   - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    echo "   - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã"
    echo "   - –ë–µ–∑ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞"
    echo ""

    while true; do
        read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–∞ (1-3): " choice
        case $choice in
            1)
                INSTALLATION_TYPE="docker"
                success "–í—ã–±—Ä–∞–Ω Docker –≤–∞—Ä–∏–∞–Ω—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
                break
                ;;
            2)
                INSTALLATION_TYPE="systemd"
                success "–í—ã–±—Ä–∞–Ω systemd –≤–∞—Ä–∏–∞–Ω—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
                break
                ;;
            3)
                INSTALLATION_TYPE="env"
                success "–í—ã–±—Ä–∞–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–æ–ª—å–∫–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
                break
                ;;
            *)
                error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –í–≤–µ–¥–∏—Ç–µ 1, 2 –∏–ª–∏ 3"
                ;;
        esac
    done
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
get_configuration() {
    echo ""
    info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"
    echo ""

    # –î–æ–º–µ–Ω
    while true; do
        read -p "–í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä: bot.example.com): " DOMAIN
        if [ -n "$DOMAIN" ] && [[ "$DOMAIN" =~ ^[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$ ]]; then
            success "–î–æ–º–µ–Ω: $DOMAIN"
            break
        else
            error "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–æ–º–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        fi
    done

    # Email
    while true; do
        read -p "–í–≤–µ–¥–∏—Ç–µ email –¥–ª—è Let's Encrypt: " EMAIL
        if [ -n "$EMAIL" ] && [[ "$EMAIL" =~ ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$ ]]; then
            success "Email: $EMAIL"
            break
        else
            error "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        fi
    done

    # Bot Token
    while true; do
        read -p "–í–≤–µ–¥–∏—Ç–µ Telegram Bot Token: " BOT_TOKEN
        if [ -n "$BOT_TOKEN" ] && [[ "$BOT_TOKEN" =~ ^[0-9]+:[a-zA-Z0-9_-]+$ ]]; then
            success "Bot Token: ${BOT_TOKEN:0:10}..."
            break
        else
            error "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç Bot Token. –§–æ—Ä–º–∞—Ç: 123456789:ABCdefGHIjklMNOpqrsTUVwxyz"
        fi
    done

    # Admin IDs
    read -p "–í–≤–µ–¥–∏—Ç–µ Admin IDs —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä: 123456789,987654321): " ADMIN_IDS
    if [ -z "$ADMIN_IDS" ]; then
        ADMIN_IDS="123456789"
        warning "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Admin ID –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $ADMIN_IDS"
    fi
    success "Admin IDs: $ADMIN_IDS"

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    echo ""
    info "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"

    read -p "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è Redis (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: random): " REDIS_PASSWORD
    if [ -z "$REDIS_PASSWORD" ]; then
        REDIS_PASSWORD=$(openssl rand -base64 32)
        success "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —Å–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ä–æ–ª—å Redis"
    fi

    read -p "–í–≤–µ–¥–∏—Ç–µ webhook –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ): " NOTIFICATION_WEBHOOK
    if [ -n "$NOTIFICATION_WEBHOOK" ]; then
        success "Webhook: $NOTIFICATION_WEBHOOK"
    fi
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤
    apt-get update -y

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
    apt-get install -y \
        curl \
        wget \
        git \
        unzip \
        software-properties-common \
        apt-transport-https \
        ca-certificates \
        gnupg \
        lsb-release \
        htop \
        nano \
        vim \
        ufw \
        fail2ban \
        logrotate \
        cron \
        openssl \
        dnsutils \
        net-tools

    success "–°–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker
install_docker() {
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."

    # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π
    apt-get remove -y docker docker-engine docker.io containerd runc 2>/dev/null || true

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

    apt-get update -y
    apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

    # –ó–∞–ø—É—Å–∫ Docker
    systemctl enable docker
    systemctl start docker

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
    usermod -aG docker $SUDO_USER

    success "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω"
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Python –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_python() {
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python
    apt-get install -y python3 python3-pip python3-venv python3-dev

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
    apt-get install -y \
        build-essential \
        libssl-dev \
        libffi-dev \
        libxml2-dev \
        libxslt1-dev \
        zlib1g-dev \
        libjpeg-dev \
        libpng-dev \
        libfreetype6-dev

    success "Python –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã
setup_system() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞
    ufw --force reset
    ufw default deny incoming
    ufw default allow outgoing
    ufw allow ssh
    ufw allow 80/tcp
    ufw allow 443/tcp
    ufw --force enable

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ fail2ban
    cat > /etc/fail2ban/jail.local << EOF
[DEFAULT]
bantime = 3600
findtime = 600
maxretry = 3

[sshd]
enabled = true
port = ssh
logpath = /var/log/auth.log
maxretry = 3
EOF

    systemctl enable fail2ban
    systemctl start fail2ban

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ logrotate
    cat > /etc/logrotate.d/antispam-bot << EOF
/var/log/antispam-bot/*.log {
    daily
    missingok
    rotate 30
    compress
    delaycompress
    notifempty
    create 644 antispam antispam
    postrotate
        systemctl reload antispam-bot 2>/dev/null || true
    endscript
}
EOF

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if ! id "antispam" &>/dev/null; then
        useradd -r -s /bin/bash -d /opt/antispam-bot -m antispam
        success "–°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å antispam"
    fi

    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    mkdir -p /opt/antispam-bot
    mkdir -p /var/log/antispam-bot
    mkdir -p /etc/antispam-bot

    chown -R antispam:antispam /opt/antispam-bot
    chown -R antispam:antispam /var/log/antispam-bot
    chown -R antispam:antispam /etc/antispam-bot

    success "–°–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —á–µ—Ä–µ–∑ Docker
install_docker_version() {
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ Docker..."

    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    cat > /opt/antispam-bot/.env.prod << EOF
# Production Environment Variables
DOMAIN=$DOMAIN
EMAIL=$EMAIL
BOT_TOKEN=$BOT_TOKEN
ADMIN_IDS=$ADMIN_IDS
DB_PATH=db.sqlite3
REDIS_PASSWORD=$REDIS_PASSWORD
NOTIFICATION_WEBHOOK=$NOTIFICATION_WEBHOOK
RENEWAL_THRESHOLD=30
EOF

    # –°–æ–∑–¥–∞–Ω–∏–µ docker-compose.prod.yml
    cp docker-compose.prod.yml /opt/antispam-bot/

    # –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞
    cat > /etc/systemd/system/antispam-bot-docker.service << EOF
[Unit]
Description=AntiSpam Bot Docker Service
Requires=docker.service
After=docker.service

[Service]
Type=oneshot
RemainAfterExit=yes
WorkingDirectory=/opt/antispam-bot
ExecStart=/usr/bin/docker-compose -f docker-compose.prod.yml up -d
ExecStop=/usr/bin/docker-compose -f docker-compose.prod.yml down
TimeoutStartSec=0
User=antispam
Group=antispam

[Install]
WantedBy=multi-user.target
EOF

    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    cat > /opt/antispam-bot/update.sh << 'EOF'
#!/bin/bash
cd /opt/antispam-bot
git pull origin main
docker-compose -f docker-compose.prod.yml pull
docker-compose -f docker-compose.prod.yml up -d --build
EOF

    chmod +x /opt/antispam-bot/update.sh

    # –°–æ–∑–¥–∞–Ω–∏–µ cron –∑–∞–¥–∞—á–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    echo "0 3 * * * /opt/antispam-bot/update.sh >> /var/log/antispam-bot/update.log 2>&1" | crontab -u antispam -

    success "Docker –≤–µ—Ä—Å–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —á–µ—Ä–µ–∑ systemd
install_systemd_version() {
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ systemd..."

    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    cp -r . /opt/antispam-bot/
    chown -R antispam:antispam /opt/antispam-bot

    # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    sudo -u antispam python3 -m venv /opt/antispam-bot/venv
    sudo -u antispam /opt/antispam-bot/venv/bin/pip install --upgrade pip
    sudo -u antispam /opt/antispam-bot/venv/bin/pip install -r /opt/antispam-bot/requirements.txt

    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    cat > /etc/antispam-bot/.env << EOF
BOT_TOKEN=$BOT_TOKEN
ADMIN_IDS=$ADMIN_IDS
DB_PATH=/opt/antispam-bot/db.sqlite3
REDIS_PASSWORD=$REDIS_PASSWORD
NOTIFICATION_WEBHOOK=$NOTIFICATION_WEBHOOK
EOF

    # –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞
    cat > /etc/systemd/system/antispam-bot.service << EOF
[Unit]
Description=AntiSpam Bot Service
After=network.target

[Service]
Type=simple
User=antispam
Group=antispam
WorkingDirectory=/opt/antispam-bot
Environment=PATH=/opt/antispam-bot/venv/bin
ExecStart=/opt/antispam-bot/venv/bin/python bot.py
Restart=always
RestartSec=10
StandardOutput=journal
StandardError=journal
SyslogIdentifier=antispam-bot

[Install]
WantedBy=multi-user.target
EOF

    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    cat > /opt/antispam-bot/update.sh << 'EOF'
#!/bin/bash
cd /opt/antispam-bot
git pull origin main
/opt/antispam-bot/venv/bin/pip install -r requirements.txt
systemctl restart antispam-bot
EOF

    chmod +x /opt/antispam-bot/update.sh

    # –°–æ–∑–¥–∞–Ω–∏–µ cron –∑–∞–¥–∞—á–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    echo "0 3 * * * /opt/antispam-bot/update.sh >> /var/log/antispam-bot/update.log 2>&1" | crontab -u antispam -

    success "systemd –≤–µ—Ä—Å–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Let's Encrypt
setup_letsencrypt() {
    if [ "$INSTALLATION_TYPE" = "docker" ]; then
        log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Let's Encrypt –¥–ª—è Docker..."

        # –ó–∞–ø—É—Å–∫ nginx –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
        cd /opt/antispam-bot
        docker-compose -f docker-compose.prod.yml up -d nginx

        # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ nginx
        sleep 10

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
        docker-compose -f docker-compose.prod.yml run --rm certbot /scripts/certbot-init.sh

        # –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
        docker-compose -f docker-compose.prod.yml up -d

    elif [ "$INSTALLATION_TYPE" = "systemd" ]; then
        log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Let's Encrypt –¥–ª—è systemd..."

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ certbot
        apt-get install -y certbot python3-certbot-nginx

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
        certbot certonly --webroot -w /var/www/html -d $DOMAIN --email $EMAIL --agree-tos --non-interactive

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ nginx
        apt-get install -y nginx
        cat > /etc/nginx/sites-available/antispam-bot << EOF
server {
    listen 80;
    server_name $DOMAIN;

    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    location / {
        return 301 https://\$server_name\$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name $DOMAIN;

    ssl_certificate /etc/letsencrypt/live/$DOMAIN/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$DOMAIN/privkey.pem;

    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}
EOF

        ln -sf /etc/nginx/sites-available/antispam-bot /etc/nginx/sites-enabled/
        rm -f /etc/nginx/sites-enabled/default
        nginx -t && systemctl reload nginx

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
        echo "0 2 * * * certbot renew --quiet && systemctl reload nginx" | crontab -
    fi

    success "Let's Encrypt –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –§—É–Ω–∫—Ü–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
finalize_installation() {
    log "–§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞..."

    # –í–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤
    if [ "$INSTALLATION_TYPE" = "docker" ]; then
        systemctl enable antispam-bot-docker
        systemctl start antispam-bot-docker
    elif [ "$INSTALLATION_TYPE" = "systemd" ]; then
        systemctl enable antispam-bot
        systemctl start antispam-bot
    fi

    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    cat > /usr/local/bin/antispam-bot << 'EOF'
#!/bin/bash
case "$1" in
    start)
        systemctl start antispam-bot-docker 2>/dev/null || systemctl start antispam-bot
        ;;
    stop)
        systemctl stop antispam-bot-docker 2>/dev/null || systemctl stop antispam-bot
        ;;
    restart)
        systemctl restart antispam-bot-docker 2>/dev/null || systemctl restart antispam-bot
        ;;
    status)
        systemctl status antispam-bot-docker 2>/dev/null || systemctl status antispam-bot
        ;;
    logs)
        journalctl -u antispam-bot-docker -f 2>/dev/null || journalctl -u antispam-bot -f
        ;;
    update)
        /opt/antispam-bot/update.sh
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {start|stop|restart|status|logs|update}"
        exit 1
        ;;
esac
EOF

    chmod +x /usr/local/bin/antispam-bot

    success "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
show_final_info() {
    echo ""
    success "üéâ –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
    echo ""
    echo -e "${GREEN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${GREEN}‚ïë                    –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û–ë –£–°–¢–ê–ù–û–í–ö–ï                  ‚ïë${NC}"
    echo -e "${GREEN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
    echo -e "${CYAN}üåê –î–æ–º–µ–Ω:${NC} $DOMAIN"
    echo -e "${CYAN}üìß Email:${NC} $EMAIL"
    echo -e "${CYAN}ü§ñ Bot Token:${NC} ${BOT_TOKEN:0:10}..."
    echo -e "${CYAN}üëë Admin IDs:${NC} $ADMIN_IDS"
    echo -e "${CYAN}üîß –¢–∏–ø —É—Å—Ç–∞–Ω–æ–≤–∫–∏:${NC} $INSTALLATION_TYPE"
    echo ""
    echo -e "${YELLOW}üìã –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:${NC}"
    echo "  antispam-bot start    - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"
    echo "  antispam-bot stop     - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞"
    echo "  antispam-bot restart  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"
    echo "  antispam-bot status   - –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞"
    echo "  antispam-bot logs     - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
    echo "  antispam-bot update   - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞"
    echo ""
    echo -e "${YELLOW}üîó –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:${NC}"
    echo "  https://$DOMAIN - –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
    echo "  /opt/antispam-bot - –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±–æ—Ç–∞"
    echo "  /var/log/antispam-bot - –õ–æ–≥–∏ –±–æ—Ç–∞"
    echo ""
    echo -e "${GREEN}‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!${NC}"
    echo ""
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    choose_installation_type
    get_configuration
    install_dependencies

    if [ "$INSTALLATION_TYPE" != "env" ]; then
        install_python
        setup_system

        if [ "$INSTALLATION_TYPE" = "docker" ]; then
            install_docker
            install_docker_version
        elif [ "$INSTALLATION_TYPE" = "systemd" ]; then
            install_systemd_version
        fi

        setup_letsencrypt
        finalize_installation
    fi

    show_final_info
}

# –ó–∞–ø—É—Å–∫
main "$@"
