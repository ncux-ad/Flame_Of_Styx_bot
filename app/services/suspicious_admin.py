"""
Suspicious Admin Service - –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ –¥–ª—è –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π
"""

import logging
from typing import Any, Dict, List, Optional

from aiogram.types import Message, User

from app.services.profiles import ProfileService
from app.utils.security import sanitize_for_logging

logger = logging.getLogger(__name__)


class SuspiciousAdminService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø—Ä–æ—Ñ–∏–ª—è–º–∏ –≤ –∞–¥–º–∏–Ω–∫–µ."""

    def __init__(self, profile_service: ProfileService):
        self.profile_service = profile_service

    async def get_suspicious_profiles_display(self) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π."""
        try:
            profiles = await self.profile_service.get_suspicious_profiles(limit=50)

            if not profiles:
                return "üîç –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
            text = "üîç <b>–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏</b>\n\n"
            text += "–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–æ—Ñ–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—Ç –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã.\n\n"
            text += "üìä <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
            text += "‚Ä¢ /suspicious - –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π\n"
            text += "‚Ä¢ /suspicious_reset - —Å–±—Ä–æ—Å —Å—Ç–∞—Ç—É—Å–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n"
            text += "‚Ä¢ /suspicious_analyze <user_id> - –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
            text += "‚Ä¢ /suspicious_remove <user_id> - —É–¥–∞–ª–∏—Ç—å –∏–∑ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö\n"

            return text

        except Exception as e:
            logger.error(f"Error getting suspicious profiles display: {sanitize_for_logging(str(e))}")
            raise

    async def analyze_user_profile_display(self, user_id: int, admin_id: int) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            user_info = await self.profile_service.get_user_info(user_id)

            # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç User –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
            user = User(
                id=user_info["id"],
                is_bot=user_info["is_bot"],
                first_name=user_info["first_name"],
                last_name=user_info["last_name"],
                username=user_info["username"],
            )

            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ—Ñ–∏–ª—å
            profile = await self.profile_service.analyze_user_profile(user, admin_id)

            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
            text = "üîç <b>–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
            text += (
                "<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> " + str(user_info["first_name"] or "") + " " + str(user_info["last_name"] or "") + "\n"
            )
            text += "<b>ID:</b> <code>" + str(user_id) + "</code>\n"
            text += "<b>Username:</b> @" + str(user_info["username"] or "–ù–µ—Ç") + "\n"

            if profile:
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π
                text += "<b>–°—á–µ—Ç –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:</b> " + str(profile.suspicion_score) + "\n"

                # –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø–∞—Ä—Å–∏–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã
                patterns = []
                if profile.detected_patterns and str(profile.detected_patterns).strip():
                    try:
                        if isinstance(profile.detected_patterns, (str, int, float)):
                            patterns = str(profile.detected_patterns).split(",")
                            patterns = [p.strip() for p in patterns if p.strip()]
                    except Exception:
                        patterns = []

                text += "<b>–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤:</b> " + str(len(patterns)) + "\n\n"

                if patterns:
                    text += "<b>üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã:</b>\n"
                    for pattern in patterns:
                        text += "‚Ä¢ " + str(pattern) + "\n"
                    text += "\n"

                # –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–π —á–∞—Ç
                if profile.linked_chat_title and str(profile.linked_chat_title).strip():
                    try:
                        chat_title = str(profile.linked_chat_title).strip()
                        if chat_title:
                            text += "<b>üì± –°–≤—è–∑–∞–Ω–Ω—ã–π —á–∞—Ç:</b> " + str(chat_title) + "\n"
                            text += "<b>üìä –ü–æ—Å—Ç–æ–≤:</b> " + str(profile.post_count) + "\n\n"
                    except Exception:
                        pass

                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                try:
                    score = float(str(profile.suspicion_score))
                    if score >= 0.7:
                        status = "üî¥ –í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫"
                    elif score >= 0.4:
                        status = "üü° –°—Ä–µ–¥–Ω–∏–π —Ä–∏—Å–∫"
                    else:
                        status = "üü¢ –ù–∏–∑–∫–∏–π —Ä–∏—Å–∫"
                except Exception:
                    status = "üü¢ –ù–∏–∑–∫–∏–π —Ä–∏—Å–∫"

                text += "<b>–°—Ç–∞—Ç—É—Å:</b> " + str(status) + "\n"

                # –ë–µ–∑–æ–ø–∞—Å–Ω–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
                try:
                    if profile.created_at and hasattr(profile.created_at, "strftime"):
                        date_str = profile.created_at.strftime("%d.%m.%Y %H:%M")
                    else:
                        date_str = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
                except Exception:
                    date_str = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

                text += "<b>–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞:</b> " + str(date_str)
            else:
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π
                text += "<b>–°—á–µ—Ç –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:</b> 0.00\n"
                text += "<b>–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤:</b> 0\n\n"
                text += "<b>–°—Ç–∞—Ç—É—Å:</b> üü¢ –ù–∏–∑–∫–∏–π —Ä–∏—Å–∫\n"
                text += "<b>–†–µ–∑—É–ª—å—Ç–∞—Ç:</b> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–º"

            return text

        except Exception as e:
            logger.error(f"Error analyzing user profile: {sanitize_for_logging(str(e))}")
            raise

    async def reset_suspicious_profiles(self) -> int:
        """–°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏."""
        try:
            return await self.profile_service.reset_suspicious_profiles()
        except Exception as e:
            logger.error(f"Error resetting suspicious profiles: {sanitize_for_logging(str(e))}")
            raise

    async def remove_suspicious_profile(self, user_id: int) -> bool:
        """–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π."""
        try:
            profile = await self.profile_service._get_suspicious_profile(user_id)
            if not profile:
                return False

            await self.profile_service.db.delete(profile)
            await self.profile_service.db.commit()
            return True
        except Exception as e:
            logger.error(f"Error removing suspicious profile: {sanitize_for_logging(str(e))}")
            raise
