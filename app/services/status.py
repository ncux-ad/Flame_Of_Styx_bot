"""
Status Service - –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /status
"""

import logging
from typing import Any, Dict, List

from aiogram.types import Message

from app.services.bots import BotService
from app.services.channels import ChannelService
from app.services.moderation import ModerationService
from app.utils.security import sanitize_for_logging

logger = logging.getLogger(__name__)


class StatusService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞."""

    def __init__(
        self,
        moderation_service: ModerationService,
        bot_service: BotService,
        channel_service: ChannelService,
    ):
        self.moderation_service = moderation_service
        self.bot_service = bot_service
        self.channel_service = channel_service

    async def get_bot_status(self, admin_id: int) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–∞."""
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            banned_users = await self.moderation_service.get_banned_users(limit=100)
            spam_stats = await self.moderation_service.get_spam_statistics()
            deleted_messages = spam_stats.get("deleted_messages", 0)
            total_actions = spam_stats.get("total_actions", 0)

            # –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª—ã
            all_channels = await self.channel_service.get_all_channels()

            # –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ –Ω–∞—Ç–∏–≤–Ω—ã–µ –∏ –≥—Ä—É–ø–ø—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
            native_channels = []
            comment_groups = []

            for channel in all_channels:
                if hasattr(channel, "is_comment_group") and bool(channel.is_comment_group):
                    comment_groups.append(
                        {
                            "title": channel.title or f"–ì—Ä—É–ø–ø–∞ {channel.telegram_id}",
                            "chat_id": str(channel.telegram_id),
                            "type": "–ì—Ä—É–ø–ø–∞ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤",
                        }
                    )
                elif hasattr(channel, "is_native") and bool(channel.is_native):
                    native_channels.append(
                        {
                            "title": channel.title or f"–ö–∞–Ω–∞–ª {channel.telegram_id}",
                            "chat_id": str(channel.telegram_id),
                            "type": "–ö–∞–Ω–∞–ª",
                        }
                    )

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞
            status_text = "üìä <b>–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞</b>\n\n"

            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
            status_text += "ü§ñ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:</b>\n"
            status_text += "‚Ä¢ Username: @FlameOfStyx_bot\n"
            status_text += "‚Ä¢ ID: 7977609078\n"
            status_text += "‚Ä¢ –°—Ç–∞—Ç—É—Å: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç\n\n"

            # –ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ —á–∞—Ç—ã
            total_chats = len(native_channels) + len(comment_groups)
            status_text += f"üì¢ <b>–ü–æ–¥–∫–ª—é—á—ë–Ω–Ω—ã–µ —á–∞—Ç—ã ({total_chats}):</b>\n"

            for channel in native_channels:
                status_text += f"‚Ä¢ {channel['title']} <code>({channel['chat_id']})</code>\n"
                status_text += f"  ‚îî –¢–∏–ø: {channel['type']}\n"
                status_text += "  ‚îî –°—Ç–∞—Ç—É—Å: ‚úÖ –ê–Ω—Ç–∏—Å–ø–∞–º –∞–∫—Ç–∏–≤–µ–Ω\n"

            for chat in comment_groups:
                status_text += f"‚Ä¢ {chat['title']} <code>({chat['chat_id']})</code>\n"
                status_text += f"  ‚îî –¢–∏–ø: {chat['type']}\n"
                status_text += "  ‚îî –°—Ç–∞—Ç—É—Å: ‚úÖ –ê–Ω—Ç–∏—Å–ø–∞–º –∞–∫—Ç–∏–≤–µ–Ω\n"

            # –ú–æ–¥–µ—Ä–∞—Ü–∏—è
            status_text += "\nüö´ <b>–ú–æ–¥–µ—Ä–∞—Ü–∏—è:</b>\n"
            status_text += f"‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –±–∞–Ω–æ–≤: {len(banned_users)}\n"
            status_text += f"‚Ä¢ –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {len(banned_users)}\n"
            status_text += f"‚Ä¢ –£–¥–∞–ª–µ–Ω–æ —Å–ø–∞–º-—Å–æ–æ–±—â–µ–Ω–∏–π: {deleted_messages}\n"
            status_text += f"‚Ä¢ –í—Å–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏–π –º–æ–¥–µ—Ä–∞—Ü–∏–∏: {total_actions}\n\n"

            # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ healthcheck
            status_text += "üìä <b>–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ Healthcheck:</b>\n"
            status_text += "‚Ä¢ <b>Glances:</b> http://your-server:61208 (–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã)\n"
            status_text += "‚Ä¢ <b>Healthcheck:</b> http://your-server/health (—Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞)\n"
            status_text += "‚Ä¢ <b>–õ–æ–≥–∏:</b> /var/log/flame-of-styx/ (—Å–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏)\n"
            status_text += "‚Ä¢ <b>–û—Ç—á–µ—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:</b> reports/security/ (–æ—Ç—á–µ—Ç—ã)\n\n"

            status_text += f"üëë <b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:</b> <code>{admin_id}</code>"

            return status_text

        except Exception as e:
            logger.error(f"Error getting bot status: {sanitize_for_logging(str(e))}")
            raise
