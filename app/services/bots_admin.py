"""
Bots Admin Service - –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /bots
"""

import logging
from typing import Dict, List, Any
from aiogram.types import Message

from app.services.bots import BotService
from app.utils.security import sanitize_for_logging

logger = logging.getLogger(__name__)


class BotsAdminService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞–º–∏ –≤ –∞–¥–º–∏–Ω–∫–µ."""
    
    def __init__(self, bot_service: BotService):
        self.bot_service = bot_service

    async def get_bots_list(self) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –±–æ—Ç–æ–≤ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /bots."""
        try:
            bots = await self.bot_service.get_all_bots()
            
            if not bots:
                return (
                    "ü§ñ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞–º–∏</b>\n\n"
                    "üìã <b>–°–ø–∏—Å–æ–∫ –±–æ—Ç–æ–≤ –ø—É—Å—Ç</b>\n\n"
                    "üí° <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
                    "‚Ä¢ /add_bot @username - –¥–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ whitelist\n"
                    "‚Ä¢ /remove_bot @username - —É–¥–∞–ª–∏—Ç—å –±–æ—Ç–∞ –∏–∑ whitelist\n\n"
                    "üõ°Ô∏è <b>–ó–∞—â–∏—Ç–∞ –æ—Ç –±–æ—Ç–æ–≤:</b>\n"
                    "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –±–æ—Ç–æ–≤\n"
                    "‚Ä¢ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –±–æ—Ç–æ–≤\n"
                    "‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –±–æ—Ç–∞—Ö"
                )
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
            bots_text = "ü§ñ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞–º–∏</b>\n\n"
            bots_text += f"üìä <b>–í—Å–µ–≥–æ –±–æ—Ç–æ–≤:</b> {len(bots)}\n\n"
            
            # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Å—Ç–∞—Ç—É—Å—É
            whitelist_bots = [bot for bot in bots if getattr(bot, 'is_whitelisted', True)]
            blacklist_bots = [bot for bot in bots if not getattr(bot, 'is_whitelisted', True)]
            
            if whitelist_bots:
                bots_text += "‚úÖ <b>–í whitelist:</b>\n"
                for i, bot in enumerate(whitelist_bots[:5], 1):
                    username = bot.username or '–ë–µ–∑ username'
                    bots_text += f"{i}. @{username}\n"
                    first_name = getattr(bot, 'first_name', None)
                    if first_name and str(first_name).strip():
                        bots_text += f"   –ò–º—è: {first_name}\n"
                    bots_text += f"   ID: <code>{bot.id}</code>\n\n"
                
                if len(whitelist_bots) > 5:
                    bots_text += f"... –∏ –µ—â–µ {len(whitelist_bots) - 5} –±–æ—Ç–æ–≤\n\n"
            
            if blacklist_bots:
                bots_text += "üö´ <b>–í blacklist:</b>\n"
                for i, bot in enumerate(blacklist_bots[:3], 1):
                    username = bot.username or '–ë–µ–∑ username'
                    bots_text += f"{i}. @{username}\n"
                    first_name = getattr(bot, 'first_name', None)
                    if first_name and str(first_name).strip():
                        bots_text += f"   –ò–º—è: {first_name}\n"
                    bots_text += f"   ID: <code>{bot.id}</code>\n\n"
                
                if len(blacklist_bots) > 3:
                    bots_text += f"... –∏ –µ—â–µ {len(blacklist_bots) - 3} –±–æ—Ç–æ–≤\n\n"
            
            bots_text += "üí° <b>–ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</b>\n"
            bots_text += "‚Ä¢ /add_bot @username - –¥–æ–±–∞–≤–∏—Ç—å –≤ whitelist\n"
            bots_text += "‚Ä¢ /remove_bot @username - —É–¥–∞–ª–∏—Ç—å –∏–∑ whitelist\n"
            bots_text += "‚Ä¢ /help bots - –ø–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞"
            
            return bots_text
            
        except Exception as e:
            logger.error(f"Error getting bots list: {sanitize_for_logging(str(e))}")
            return "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –±–æ—Ç–æ–≤"

    async def add_bot_to_whitelist(self, bot_username: str, admin_id: int) -> str:
        """–î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ whitelist."""
        try:
            # –û—á–∏—â–∞–µ–º username –æ—Ç @
            clean_username = bot_username.lstrip("@")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≤–∞–ª–∏–¥–Ω—ã–π username
            if not clean_username or len(clean_username) < 5:
                return "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π username –±–æ—Ç–∞"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –±–æ—Ç–∞
            result = await self.bot_service.add_bot_to_whitelist(clean_username, admin_id)
            
            if result:
                return f"‚úÖ <b>–ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ whitelist</b>\n\nü§ñ <b>Username:</b> @{clean_username}\nüìä <b>–°—Ç–∞—Ç—É—Å:</b> –†–∞–∑—Ä–µ—à–µ–Ω"
            else:
                return f"‚ùå <b>–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞</b>\n\nü§ñ <b>Username:</b> @{clean_username}\nüí° <b>–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:</b>\n‚Ä¢ –ë–æ—Ç —É–∂–µ –≤ whitelist\n‚Ä¢ –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
                
        except Exception as e:
            logger.error(f"Error adding bot to whitelist: {sanitize_for_logging(str(e))}")
            return f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞ @{bot_username}"

    async def remove_bot_from_whitelist(self, bot_username: str, admin_id: int) -> str:
        """–£–¥–∞–ª–∏—Ç—å –±–æ—Ç–∞ –∏–∑ whitelist."""
        try:
            # –û—á–∏—â–∞–µ–º username –æ—Ç @
            clean_username = bot_username.lstrip("@")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≤–∞–ª–∏–¥–Ω—ã–π username
            if not clean_username or len(clean_username) < 5:
                return "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π username –±–æ—Ç–∞"
            
            # –£–¥–∞–ª—è–µ–º –±–æ—Ç–∞
            result = await self.bot_service.remove_bot_from_whitelist(clean_username, admin_id)
            
            if result:
                return f"‚úÖ <b>–ë–æ—Ç —É–¥–∞–ª–µ–Ω –∏–∑ whitelist</b>\n\nü§ñ <b>Username:</b> @{clean_username}\nüìä <b>–°—Ç–∞—Ç—É—Å:</b> –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"
            else:
                return f"‚ùå <b>–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –±–æ—Ç–∞</b>\n\nü§ñ <b>Username:</b> @{clean_username}\nüí° <b>–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:</b>\n‚Ä¢ –ë–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ whitelist\n‚Ä¢ –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
                
        except Exception as e:
            logger.error(f"Error removing bot from whitelist: {sanitize_for_logging(str(e))}")
            return f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –±–æ—Ç–∞ @{bot_username}"
